{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst baseURL = process.env.REACT_APP_API_URL || 'https://thriftwebsite.fly.dev';\n\n// Async thunk for posting a new listing\nexport const postListing = createAsyncThunk('sell/postListing', async (formData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(`${baseURL}/api/sell/form`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\n\n// Async thunk for fetching items based on category\nexport const fetchItems = createAsyncThunk('sell/fetchItems', async ({\n  category,\n  page = 1,\n  limit = 10\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get(`${baseURL}/api/product/items?category=${category}`);\n    console.log('API Response:', response.data);\n    console.log(\"Fetching from:\", `${process.env.REACT_APP_API_URL}/api/product/items?category=${category}`);\n    return {\n      category,\n      items: response.data\n    };\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const updateProduct = createAsyncThunk('sell/updateProduct', async (formData, {\n  rejectWithValue\n}) => {\n  try {\n    const result = await axios.put(`${baseURL}/api/sell/updateForm`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return result.data;\n  } catch (error) {\n    var _error$response;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  }\n});\nconst sellSlice = createSlice({\n  name: 'sell',\n  initialState: {\n    items: {},\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(postListing.pending, state => {\n      state.loading = true;\n    }).addCase(postListing.fulfilled, (state, action) => {\n      state.loading = false;\n      const category = action.payload.category;\n      if (!state.items[category]) {\n        state.items[category] = [];\n      }\n      state.items[category].push(action.payload.item);\n    }).addCase(postListing.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(fetchItems.pending, state => {\n      state.loading = true;\n    }).addCase(fetchItems.fulfilled, (state, action) => {\n      state.loading = false;\n      const {\n        category,\n        items\n      } = action.payload;\n      state.items[category] = items;\n    }).addCase(fetchItems.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport default sellSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","baseURL","process","env","REACT_APP_API_URL","postListing","formData","rejectWithValue","response","post","headers","data","error","fetchItems","category","page","limit","get","console","log","items","updateProduct","result","put","_error$response","message","sellSlice","name","initialState","loading","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","push","item","rejected","reducer"],"sources":["C:/Users/ppeli/OneDrive/Documents/GitHub/thriftwebsite/frontend/src/features/sellSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nconst baseURL = process.env.REACT_APP_API_URL || 'https://thriftwebsite.fly.dev';\r\n\r\n\r\n// Async thunk for posting a new listing\r\nexport const postListing = createAsyncThunk('sell/postListing', async (formData, { rejectWithValue }) => {\r\n  try {\r\n    const response = await axios.post(`${baseURL}/api/sell/form`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n\r\n    return response.data; \r\n  } catch (error) {\r\n    return rejectWithValue(error.response.data);\r\n  }\r\n});\r\n\r\n// Async thunk for fetching items based on category\r\nexport const fetchItems = createAsyncThunk('sell/fetchItems', async ({ category, page = 1, limit = 10 }, { rejectWithValue }) => {\r\n  try {\r\n    const response = await axios.get(`${baseURL}/api/product/items?category=${category}`);\r\n    console.log('API Response:', response.data);\r\n    console.log(\"Fetching from:\", `${process.env.REACT_APP_API_URL}/api/product/items?category=${category}`);\r\n\r\n    return { category, items: response.data }; \r\n  } catch (error) {\r\n    return rejectWithValue(error.response.data);\r\n  }\r\n});\r\n\r\nexport const updateProduct = createAsyncThunk(\r\n  'sell/updateProduct',\r\n  async (formData, { rejectWithValue }) => {\r\n    try {\r\n      const result = await axios.put(`${baseURL}/api/sell/updateForm`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      return result.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data || error.message);\r\n    }\r\n  }\r\n);\r\n\r\n\r\nconst sellSlice = createSlice({\r\n  name: 'sell',\r\n  initialState: {\r\n    items: {}, \r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(postListing.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(postListing.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        const category = action.payload.category; \r\n        if (!state.items[category]) {\r\n          state.items[category] = []; \r\n        }\r\n        state.items[category].push(action.payload.item);\r\n      })\r\n      .addCase(postListing.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(fetchItems.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(fetchItems.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        const { category, items } = action.payload; \r\n        state.items[category] = items; \r\n      })\r\n      .addCase(fetchItems.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default sellSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}