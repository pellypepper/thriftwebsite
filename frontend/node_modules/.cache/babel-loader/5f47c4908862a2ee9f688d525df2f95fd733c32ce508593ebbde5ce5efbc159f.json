{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// Async thunk for posting a new listing\nexport const postListing = createAsyncThunk('sell/postListing', async (formData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/sell/form`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\n\n// Async thunk for fetching items based on category\nexport const fetchItems = createAsyncThunk('sell/fetchItems', async ({\n  category,\n  page = 1,\n  limit = 10\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/product/items?category=${category}`);\n    console.log('API Response:', response.data);\n    return {\n      category,\n      items: response.data\n    };\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst sellSlice = createSlice({\n  name: 'sell',\n  initialState: {\n    items: {},\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(postListing.pending, state => {\n      state.loading = true;\n    }).addCase(postListing.fulfilled, (state, action) => {\n      state.loading = false;\n      const category = action.payload.category;\n      if (!state.items[category]) {\n        state.items[category] = [];\n      }\n      state.items[category].push(action.payload.item);\n    }).addCase(postListing.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(fetchItems.pending, state => {\n      state.loading = true;\n    }).addCase(fetchItems.fulfilled, (state, action) => {\n      state.loading = false;\n      const {\n        category,\n        items\n      } = action.payload;\n      state.items[category] = items;\n    }).addCase(fetchItems.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport default sellSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","postListing","formData","rejectWithValue","response","post","process","env","REACT_APP_API_URL","headers","data","error","fetchItems","category","page","limit","get","console","log","items","sellSlice","name","initialState","loading","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","push","item","rejected","reducer"],"sources":["C:/Users/ppeli/OneDrive/Documents/GitHub/thriftwebsite/frontend/src/features/sellSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\n// Async thunk for posting a new listing\r\nexport const postListing = createAsyncThunk('sell/postListing', async (formData, { rejectWithValue }) => {\r\n  try {\r\n    const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/sell/form`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n\r\n    return response.data; \r\n  } catch (error) {\r\n    return rejectWithValue(error.response.data);\r\n  }\r\n});\r\n\r\n// Async thunk for fetching items based on category\r\nexport const fetchItems = createAsyncThunk('sell/fetchItems', async ({ category, page = 1, limit = 10 }, { rejectWithValue }) => {\r\n  try {\r\n    const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/product/items?category=${category}`);\r\n    console.log('API Response:', response.data);\r\n    return { category, items: response.data }; \r\n  } catch (error) {\r\n    return rejectWithValue(error.response.data);\r\n  }\r\n});\r\n\r\nconst sellSlice = createSlice({\r\n  name: 'sell',\r\n  initialState: {\r\n    items: {}, \r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(postListing.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(postListing.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        const category = action.payload.category; \r\n        if (!state.items[category]) {\r\n          state.items[category] = []; \r\n        }\r\n        state.items[category].push(action.payload.item);\r\n      })\r\n      .addCase(postListing.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(fetchItems.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(fetchItems.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        const { category, items } = action.payload; \r\n        state.items[category] = items; \r\n      })\r\n      .addCase(fetchItems.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default sellSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}